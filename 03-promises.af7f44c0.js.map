{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACeC,SAASC,cAAc,SAAtC,MACMC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAWJ,SAASC,cAAc,wBAGxC,SAASI,EAAcC,EAAUC,GAC/BC,YAAW,KACaC,KAAKC,SAAW,GAEpCC,QAAQ,C,SAAEL,E,MAAUC,IAEpBK,OAAO,C,SAAEN,E,MAAUC,GAAQ,GAE5BA,E,CAVSP,SAASC,cAAc,yBAa/BY,iBAAiB,SAASC,IAE9B,IADAA,EAAMC,iBACDC,EAAI,EAAGA,GAAKZ,EAASa,MAAOD,IAC/BX,EAAcW,EAAI,GAAId,EAAae,MAAQD,GAAKb,EAAYc,OACzDC,MAAK,EAACZ,SAAEA,EAAQC,MAAEA,MACjBY,EAAArB,GAASsB,OAAOC,QACd,uBAAqBf,QAAiBC,MAAU,IAGnDe,OAAM,EAAChB,SAAEA,EAAQC,MAAEA,MAClBY,EAAArB,GAASsB,OAAOG,QACd,sBAAoBjB,QAAiBC,MAAU,GAEjD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst delayStepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst btnEl = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n}\n\nbtnEl.addEventListener('click', event => {\n  event.preventDefault();\n  for (i = 0; i < +amountEl.value; i++) {\n    createPromise(i + 1, +firstDelayEl.value + i * +delayStepEl.value)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\n//or\n\n// const formEl = document.querySelector('.form');\n\n// formEl.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const formData = new FormData(event.target);\n//   const firstDelay = parseInt(formData.get('delay'));\n//   const step = parseInt(formData.get('step'));\n//   const amount = parseInt(formData.get('amount'));\n\n//   for (i = 0; i < amount; i++) {\n//     createPromise(i + 1, firstDelay + i * step)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//   }\n// });\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n//or\n\n// const delayEl = document.querySelector('input[name=delay]');\n// const stepEl = document.querySelector('input[name=step]');\n// const amountEl = document.querySelector('input[name=amount]');\n// const buttonEl = document.querySelector('button[type=submit]');\n\n// const createPromise = (position, delay) => {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       reject(`Rejected promise ${position} in ${delay}ms`);\n//     }\n//   });\n// };\n\n// const showPromise = (amount, step, time, current = 1) => {\n//   if (current > amount) return;\n//   createPromise(current, time)\n//     .then(success => Notiflix.Notify.success(success))\n//     .catch(error => Notiflix.Notify.failure(error));\n//   time += step;\n//   setTimeout(() => showPromise(amount, step, time, current + 1), step);\n// };\n\n// buttonEl.addEventListener('click', event => {\n//   event.preventDefault();\n//   setTimeout(\n//     () => showPromise(+amountEl.value, +stepEl.value, +delayEl.value),\n//     +delayEl.value\n//   );\n// });\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$firstDelayEl","$47d4ff9957288465$var$delayStepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","Math","random","resolve","reject","addEventListener","event","preventDefault","i","value","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.af7f44c0.js.map"}